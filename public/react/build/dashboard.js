"use strict";var IndexResult = React.createClass({ displayName: "IndexResult",  render: function render() {    var rows;    if (this.props.results[0]) {      rows = $.map(this.props.results, function (item, i) {        var rowValue = JSON.stringify(item, null, 4);        var rowId = "row" + i;        var rowRef = "#" + rowId;        return React.createElement(          "div",          { className: "row", key: i },          React.createElement(            "a",            { href: rowRef, "data-toggle": "collapse" },            item.CustomerName          ),          React.createElement(            "div",            { id: rowId, className: "collapse in" },            rowValue          )        );      });    }    return React.createElement(      "div",      { className: "panel panel-primary" },      React.createElement(        "div",        { className: "panel-heading" },        React.createElement(          "span",          null,          this.props.index        )      ),      React.createElement(        "div",        { className: "panel-body" },        React.createElement(          "div",          { className: "container" },          rows        )      )    );  }});var SearchResult = React.createClass({ displayName: "SearchResult",  render: function render() {    var decodeitems = $('<div />').html(this.props.items).text();    var itemsObj = resultsStr;    var rows;    if (itemsObj) {      rows = $.map(itemsObj, function (item, i) {        return React.createElement(          "div",          { className: "row", key: i },          React.createElement(IndexResult, { index: item.index, results: item.results })        );      });    }    return React.createElement(      "div",      { className: "container" },      React.createElement(        "div",        { className: "row" },        React.createElement(          "label",          { className: "col-sm-2", style: { 'color': "#337ab7" } },          "Search Query"        ),        React.createElement(          "span",          null,          this.props.query        )      ),      rows    );  }});