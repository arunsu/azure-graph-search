"use strict";var IndexResult = React.createClass({ displayName: "IndexResult",  render: function render() {    var rows;    if (this.props.results[0]) {      rows = $.map(this.props.results, function (item, i) {        var rowValue = JSON.stringify(item, null, 4);        var itemProps = [];        for (var property in item) {          if (item.hasOwnProperty(property)) {            itemProps.push(property);          }        }        var divRows = $.map(itemProps, function (itemProp, j) {          return React.createElement(            "div",            { key: j, className: "info" },            itemProp,            ": ",            item[itemProp]          );        });        var rowId = "row" + i;        var rowRef = "#" + rowId;        var collapsed = i == 0 ? false : true;        var name = React.createElement(          "a",          { href: "http://aka.ms/genevaarg" },          item.id        );        return React.createElement(          "div",          { className: "row", key: i },          React.createElement(            TreeView,            { nodeLabel: name, defaultCollapsed: collapsed },            divRows          )        );      });    }    return React.createElement(      "div",      { className: "panel panel-primary" },      React.createElement(        "div",        { className: "panel-heading" },        React.createElement(          "span",          null,          this.props.index        )      ),      React.createElement(        "div",        { className: "panel-body" },        React.createElement(          "div",          { className: "container" },          rows        )      )    );  }});var SearchResult = React.createClass({ displayName: "SearchResult",  render: function render() {    var decodeitems = $('<div />').html(this.props.items).text();    var itemsObj = resultsStr;    var rows;    if (itemsObj) {
      var goodRows = $.map(itemsObj, function (item) {
        if (item.results[0]) return item;
      });
      rows = $.map(goodRows, function (item, i) {
        return React.createElement(
          "div",
          { className: "row", key: i },
          React.createElement(IndexResult, { index: item.index, results: item.results })
        );
      });
    }    return React.createElement(      "div",      { className: "container" },      React.createElement(        "div",        { className: "row" },        React.createElement(          "label",          { className: "col-sm-2", style: { 'color': "#337ab7" } },          "Search Query"        ),        React.createElement(          "span",          null,          this.props.query        )      ),      rows    );  }});